<?php

include_once('dlr_info.features.inc');


/**
 * Implementation of hook_context_links_alter().
 * 
 * Have only one context link button appear for dlr group nodes when the info tab is selected: Edit the node.
 * 
 * Have context links for all nodes which have dlr_nodes_context_links set
 */
function dlr_info_context_links_alter(&$links) {
  $path_query = $_GET['q'];
  if (context_get('context', 'dlr_groups_context_links')) {
    $links = array();
    $node = menu_get_object();
    /* @var $active_space spaces_og class */
    $active_space = spaces_get_space();
    $group_node = node_load($active_space->id);

    // The context_links button appaear for info page and pages with nod$group_nodee in the url but not node edit
    if ($path_query === "info" || ($group_node->nid == $node->nid && strpos($path_query, "node") !== FALSE && strpos($path_query, "edit") === FALSE && strpos($path_query, "grant") === FALSE)) {
      $item = menu_get_item('node/' . $active_space->id . '/edit');
      $node_type = node_get_types('name', $group_node);
      if ($item['access']) {
        $links['admin_groups'] = array('title' => t('@name bearbeiten', array('@name' => $node_type), 'de'), 'href' => $item['href']);
      }
    }
  }
  if (context_get('context', 'dlr_nodes_context_links')) {
    $links = array();
    $node = menu_get_object();
    $item = menu_get_item('node/' . $node->nid . '/edit');
    //Need to set the following context links for the node types mentioned in the context.
    if ($item['access']) {
      $links['edit_node'] = array('title' => t('@name bearbeiten', array('@name' => node_get_types('name', $node)), 'de'), 'href' => $item['href'], '#weight' => 0);
    }
    //setting a grant context link
    if (nodeaccess_access('grant', $node)) {
      $item = menu_get_item('node/' . $node->nid . '/grant');
      $links['node_access'] = array('title' => t('Sichtbarkeitseinstellungen', array('@name' => node_get_types('name', $node)), 'de'), 'href' => $item['href'], '#weight' => 2);
    }

    if ($node->type == 'book') {
      $item = menu_get_item('node/' . $node->nid . '/edit');
      //Need to set the following context links for the node types mentioned in the context.
      if ($item['access']) 
        $links['edit_node'] = array('title' => t('Seite bearbeiten', NULL, 'de'), 'href' => $item['href'], '#weight' => 0);
      $item = menu_get_item('node/add/book');
      if ($item['access'])
        $links['add_book'] = array('title' => t('Unterseite hinzfÃ¼gen', NULL, 'de'), 'href' => $item['href'], '#weight' => 1);
    }
  }
}

/**
 * Implementation of hook_form_alter().
 */
function dlr_info_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'search_form':
    case 'search_theme_form':
    case 'atrium_search_form':
      unset($_REQUEST['destination']);
      $form['submit']['#submit'] = array('dlr_info_apachesolr_search_form_submit');
      break;
  }
}

/** 
 * Send the searches to apachesolr
 */
function dlr_info_apachesolr_search_form_submit(&$form, &$form_state) { 
  // Look for our search terms in the right place
  if ($form_state['values']['search']) { 
    $search = $form_state['values']['search'];
  }
  else { 
    $search = $form_state['values']['keys'];
  }

  // Add an appropriate filter if we were searching from within a group
  $current_space = spaces_get_space();
  if ($current_space && $current_space->type == 'og') { 
  //  $query = 'filters=im_og_gid:'. $current_space->id;
  }
  global $base_url;
  $form_state['redirect'] = array($base_url.'/search/apachesolr_search/'. $search, $query);
}


